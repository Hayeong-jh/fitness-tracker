name: Deploy to Amazon EC2

on:
  pull_request:
    types: [ closed ]
    branches: [ "main" ]

# 본인이 설정한 값을 여기서 채워넣습니다.
# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: fitness-github-actions
  CODE_DEPLOY_APPLICATION_NAME: fitness-tracker-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: fitness-tracker-deployment-group

permissions:
  contents: read
  checks: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.ACTION_TOKEN }}
        submodules: 'recursive'

    # JDK 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # gradlew 권한 추가
    - name: permission upgrade gradlew
      run: chmod +x ./gradlew

    # Gradle 캐시 설정
    - uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
      
    # submodule 파일 복사
    - run: ./gradlew copySecret

    # Gradle build (Test 제외)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: clean build -x test

    # AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 📦 jar, appspec, 배포 스크립트 복사
      run: |
        mkdir -p before-deploy
        cp ./build/libs/*.jar ./before-deploy/
        cp ./appspec.yml ./before-deploy/
        cp -r ./scripts/ ./before-deploy/scripts/

    - name: 🗜️ 배포 패키지 생성
      run: zip -r -qq ./deploy.zip ./before-deploy/

    - name: 🚛 S3로 업로드
      run: aws s3 cp --region ap-northeast-2 ./deploy.zip s3://$S3_BUCKET_NAME/

    - name: 🚀 CodeDeploy를 이용한 배포
      run: |
        aws deploy create-deployment \
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=deploy.zip \
        --region ${{ env.AWS_REGION }}
